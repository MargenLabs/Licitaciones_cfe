name: CFE Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 15,19,23 * * *'  # 08:00,12:00,16:00 Tijuana (UTCâˆ’7 â†’ UTC 15,19,23)

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Install Chromium
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'

      - name: Install Chromedriver
        uses: nanasess/setup-chromedriver@v2

#      - name: Test Telegram connectivity
#        env:
#          TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
#          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#        run: |
#          python3 - <<EOF
#          import os, requests
#          token = os.environ['TELEGRAM_TOKEN']
#          chat = os.environ['TELEGRAM_CHAT_ID']
#          r = requests.post(
#            f"https://api.telegram.org/bot{token}/sendMessage",
#            json={'chat_id': chat, 'text': 'ðŸš€ Test GitHub Actions'}
#          )
#          print('Status:', r.status_code)
#          print('Body:', r.text)
#          EOF
#
#      - name: Simulate state.json change
#        run: |
#          python3 - <<EOF
#          import json, os
#          fn = 'state.json'
#          if os.path.exists(fn):
#              s = json.load(open(fn))
#          else:
#              s = {}
#          # fuerza todos los estados o aÃ±ade uno nuevo
#          if s:
#              for k in s:
#                  s[k]['estado'] = 'PruebaGitHub'
#          else:
#              s = {'SIMULATED': {'estado': 'PruebaGitHub'}}
#          with open(fn, 'w') as f:
#              json.dump(s, f, indent=2)
#          print('Simulated state:', s)
#          EOF
#
#      - name: Debug workspace
#        run: |
#          ls -Rla .
#          cat state.json

      - name: Run scraper
        env:
          TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python scraper_cfe.py

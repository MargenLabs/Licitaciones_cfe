name: CFE Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 15,19,23 * * *'  # 08:00,12:00,16:00 Tijuana (UTCâˆ’7 â†’ UTC 15,19,23)

jobs:
  run-scraper:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Install Chromium
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'

      - name: Install Chromedriver
        uses: nanasess/setup-chromedriver@v2

      - name: Test Telegram connectivity
        env:
          TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python3 <<'EOF'
          import os, requests
          token = os.environ["TELEGRAM_TOKEN"]
          chat = os.environ["TELEGRAM_CHAT_ID"]
          print("DEBUG: enviando mensaje de test a Telegramâ€¦")
          r = requests.post(
              f"https://api.telegram.org/bot{token}/sendMessage",
              json={"chat_id": chat, "text": "ðŸš€ Test Telegram desde GitHub Actions"}
          )
          print("DEBUG: status", r.status_code)
          print("DEBUG: body", r.text)
          EOF

      - name: Simulate state.json change
        run: |
          python3 <<'EOF'
          import json, os

          fn = "state.json"
          state = json.load(open(fn)) if os.path.exists(fn) else {}

          if state:
              for key in state:
                  state[key]["estado"] = "PruebaGitHub"
          else:
              state["SIMULATED_ID"] = {"estado": "PruebaGitHub"}

          with open(fn, "w") as f:
              json.dump(state, f, indent=2)

          print("DEBUG: simulated state.json:", json.dumps(state, indent=2))
          EOF

      - name: Debug: list workspace files
        run: |
          ls -Rla .

      - name: Debug: show state.json
        run: |
          cat state.json

      - name: Run scraper
        env:
          TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python scraper_cfe.py
